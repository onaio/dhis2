#!/bin/bash
#       ____  __  ______________ 
#      / __ \/ / / /  _/ ___/__ \
#     / / / / /_/ // / \__ \__/ /
#    / /_/ / __  // / ___/ / __/ 
#   /_____/_/ /_/___//____/____/
#
#   Script to deploy a dhis2 instance

set -e

#############################################################
# the user who is running the deploy script
# should be in dhis2admin group

if [[ "$(groups $USER)" =~ dhis2admin ]]
then
  echo "Good. User is in dhis2admin group"
else
  echo "$USER is not in dhis2admin group.  You must be in the dhis2admin group to deploy a new instance"
  exit 1
fi
##############################################################
# variables and default values
DHIS2BASEDIR=/var/lib/dhis2
DHIS2SKEL=/usr/share/dhis2-tools/skel

PROG=`basename $0`
HTTPPORT=8080
CREATEDB=true
###############################################################
usage() {
  echo "Usage: $PROG [options] <instance>"
  echo "  instance: name of the dhis2 instance to create"
  echo "Options:"
  echo "  -h, --help       Display this help message"
  echo "  -n               Do NOT create database for instance"
  echo "  -p httpport      HTTP port to be used by Tomcat (default is $HTTPPORT)"
}

###############################################################
checkport() {
  type=$1
  port=$2
  echo "Checking $type port $port"
  # Fail if port is non-numeric
  num=`expr ${port} + 1 2> /dev/null`
  if [ $? != 0 ] || [ $num -lt 2 ]; then
    echo "Error: ${type} port '${port}' is not a valid TCP port number."
    exit 1
  fi

  # Fail if port is above 65535
  if [ ${port} -gt 65535 ]; then
    echo "Error: ${type} port ${port} is above TCP port numbers (> 65535)."
    exit 1
  fi

  # Fail if port is below 1024
  if [ ${port} -lt 1024 ]; then
    echo "Error: ports below 1024 are reserved to the super-user."
    exit 1
  fi

  # Fail if port appears to be in use
  if nc localhost "${port}" -z > /dev/null; then
    echo "Error: ${type} port ${port} appears to be in use."
    exit 1
  fi
}
###############################################################

# main entry point 
echo checking options
while getopts p:nh opt
do
  case $opt in
    p) HTTPPORT=$OPTARG ;;
    n) CREATEDB=false ;;
    h) usage;;
    *) echo "Error: Unknown parameter '$OPTARG'."
        exit 1;;
  esac
done

shift $(($OPTIND - 1))

if [ "$#" -lt 1 ]; then
  usage
  exit 1
fi
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  usage
  exit 0
fi


TARGET=$1
# TODO: parameterize database name
DBNAME=$TARGET
DHIS2HOME=$DHIS2BASEDIR/$TARGET

# Fail if no target specified
if [ -z "${TARGET}" ]; then
  echo "Error: No Dhis2 instance name specified"
  exit 1
fi
echo "You are about to create a Dhis2 instance called '$TARGET'"

###############################################################

#  perform some checks before doing anything

id -u $TARGET >/dev/null 2>&1 && { echo "User $TARGET already exists"; exit 1; }
checkport HTTP "$HTTPPORT"
if $CREATEDB; then
  sudo -u postgres psql $DBNAME -c '\q' >/dev/null 2>&1 && { echo "Database $DBNAME exists"; exit 1; }
fi
###############################################################

#  Right, we should be good to go ...

# create the system user
sudo useradd -m -s /bin/bash -b $DHIS2BASEDIR -c "$TARGET dhis2 instance" -g dhis2 -k $DHIS2SKEL $TARGET
# create the database user with a strong password
PASSWORD=$(makepasswd --chars=10)
sudo -u postgres psql -c "CREATE ROLE $TARGET PASSWORD '$PASSWORD' NOSUPERUSER CREATEDB NOCREATEROLE INHERIT LOGIN;"

if $CREATEDB; then
  # Create the database
  sudo -u postgres psql -c  "CREATE DATABASE $DBNAME OWNER $TARGET ENCODING 'UTF-8' TEMPLATE template0;"
  sudo -u postgres psql -c  "GRANT ALL ON DATABASE $DBNAME TO $TARGET;"
fi

sudo -u $TARGET sh -c "cat > $DHIS2HOME/hibernate.properties" << EOT
hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
hibernate.connection.driver_class = org.postgresql.Driver
hibernate.connection.url = jdbc:postgresql://localhost:5432/$DBNAME
hibernate.connection.username = $TARGET
hibernate.connection.password = $PASSWORD
hibernate.hbm2ddl.auto = update
EOT

sudo -u $TARGET chmod 0600  $DHIS2HOME/hibernate.properties
sudo -u $TARGET sed -i s/HTTPPORT/$HTTPPORT/ $DHIS2HOME/conf/server.xml

sudo -u $TARGET sh -c "cat > $DHIS2HOME/logrotate.conf" << EOT
$DHIS2HOME/logs/catalina.out {
   rotate 24
   dateext
   monthly
   create
   compress
   copytruncate
   noolddir
}
EOT

###############################################################

# setup user crontab

sudo -u $TARGET sh -c "crontab -u $TARGET -" << EOT
@reboot CATALINA_BASE=/var/lib/dhis2/$TARGET /usr/bin/dhis2-startup $TARGET
20 19 * * * /usr/bin/dhis2-backup $TARGET
21 00 * * * /usr/sbin/logrotate -s $DHIS2HOME/logrotate.status $DHIS2HOME/logrotate.conf
EOT
